<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="backButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH5AseDyg5jxODFgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAA5CSURBVHhe
        7d1biLVlGcdh9xLlpjAKwlLBDQhR6FlQQYUeJQQVZGpUpJWVEKGVZRFhGys68CAQCiICiRCKwqiUgiRE
        EyuSIkFzE2GiCKK56//Ouoc+bXyd+b7ZrPXc1wU3LGez5n2Ofvd6ZznfQQAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACwXZ555pmTMxdnfpi5NfNA5tHMI5l/Zm7KXJO5IPOK+jYAYNUk5Idnzs/8PrMV
        T2Z+ljmrngoAWAWJ9zmZv2cO1HRn4Mx6WgBgGSXWR2em2/zb6anMlzKH1Y8BAJZFAn1C5o7MTvlF5qj6
        cQDAXkuYT8vcO1V6h92cOaZ+LACwVxLkKf73T3XeJb/OHFE/HgDYbQnxqZndeOX/XFfVJQAAuykR3u1X
        /vt6OvOmuhQAYDckvnsZ/3W3ZQ6pSwIAdlKiu1e3/TfyjrosAGCnJLjL8Mp/X7+pSwMAdkJiu0yv/NdN
        7wU4oS4RANhOieyyvfLf10V1mQDAdklglzn+kx/UpQIA2yFxXcbb/s91W10uAHCgEtZlf+W/7uG6ZADg
        QCSqq/DKf930RkB/DwAADkRiuiqv/Pd1eF0+ALBVCekqxv+xunwAYKsS0lW67b+vO+sIAMBWJKKr+Mp/
        3fV1DABgsxLQVX3lv+4LdRQAYDMSz1V+5b/ujXUcAOCFJJyr/sp/cl/m0DoSADAn0Rwh/hO3/wFgMxLN
        EW77Tx7JvLyOBQA8nwRzlFf+k8vqWADA80kwR3nlP/lD5sg6GgCwkcRypPg/lDm1jgYAbGSKZWaU2/6P
        Z95WRwMANpJYjhb/c+poAMBGEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BO
        EkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BO
        EkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BO
        EkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BO
        EkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BO
        EkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEkvxB4BOEstTMuIPAF0kluIPAJ0kluIP
        AJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIP
        AJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIP
        AJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIP
        AJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIP
        AJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIP
        AJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIP
        AJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIPAJ0kluIP
        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
        rkJggg==
</value>
  </data>
  <metadata name="guna2Elipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="guna2Elipse2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>160, 17</value>
  </metadata>
</root>